load("@rules_req_compile//:defs.bzl", "py_reqs_compiler", "py_reqs_solution_test")

PLATFORMS = [
    "linux",
    "macos",
    "windows",
]

filegroup(
    name = "test_requirements_in",
    srcs = ["test_requirements.in"],
    data = ["//python/pylint/private/3rdparty:requirements.in"],
)

[
    py_reqs_compiler(
        name = "test_requirements.{}.update".format(platform),
        requirements_in = "test_requirements_in",
        requirements_txt = "test_requirements_{}.txt".format(platform),
        target_compatible_with = ["@platforms//os:{}".format(platform)],
    )
    for platform in PLATFORMS
]

[
    py_reqs_solution_test(
        name = "test_requirements_{}_test".format(platform),
        compiler = ":test_requirements.{}.update".format(platform),
    )
    for platform in PLATFORMS
]

alias(
    name = "test_requirements.update",
    actual = select({
        "@platforms//os:{}".format(platform): ":test_requirements.{}.update".format(platform)
        for platform in PLATFORMS
    }),
)
